//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vhudson-jaxb-ri-2.1-833 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2014.11.19 at 05:22:00 PM GMT 
//


package wak.work.cryptogram.graem.securecrypto.xmlinterface.generated;

import javax.xml.bind.JAXBElement;
import javax.xml.bind.annotation.XmlElementDecl;
import javax.xml.bind.annotation.XmlRegistry;
import javax.xml.bind.annotation.adapters.HexBinaryAdapter;
import javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter;
import javax.xml.namespace.QName;


/**
 * This object contains factory methods for each 
 * Java content interface and Java element interface 
 * generated in the wak.work.cryptogram.graem.securecrypto.xmlinterface.generated package. 
 * <p>An ObjectFactory allows you to programatically 
 * construct new instances of the Java representation 
 * for XML content. The Java representation of XML 
 * content can consist of schema derived interfaces 
 * and classes representing the binding of schema 
 * type definitions, element declarations and model 
 * groups.  Factory methods for each of these are 
 * provided in this class.
 * 
 */
@XmlRegistry
public class ObjectFactory {

    private final static QName _KeyType_QNAME = new QName("", "KeyType");
    private final static QName _SMExtension_QNAME = new QName("", "SMExtension");
    private final static QName _MKIdentifier_QNAME = new QName("", "MKIdentifier");
    private final static QName _CryptoEngineVersion_QNAME = new QName("", "CryptoEngineVersion");
    private final static QName _Component_QNAME = new QName("", "Component");
    private final static QName _SMType_QNAME = new QName("", "SMType");
    private final static QName _KeySize_QNAME = new QName("", "KeySize");
    private final static QName _SCIKeyValue_QNAME = new QName("", "SCIKeyValue");

    /**
     * Create a new ObjectFactory that can be used to create new instances of schema derived classes for package: wak.work.cryptogram.graem.securecrypto.xmlinterface.generated
     * 
     */
    public ObjectFactory() {
    }

    /**
     * Create an instance of {@link XMLSCIKeyData }
     * 
     */
    public XMLSCIKeyData createXMLSCIKeyData() {
        return new XMLSCIKeyData();
    }

    /**
     * Create an instance of {@link XMLSCIKeyUsage }
     * 
     */
    public XMLSCIKeyUsage createXMLSCIKeyUsage() {
        return new XMLSCIKeyUsage();
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "KeyType")
    public JAXBElement<String> createKeyType(String value) {
        return new JAXBElement<String>(_KeyType_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link byte[]}{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "SMExtension")
    @XmlJavaTypeAdapter(HexBinaryAdapter.class)
    public JAXBElement<byte[]> createSMExtension(byte[] value) {
        return new JAXBElement<byte[]>(_SMExtension_QNAME, byte[].class, null, ((byte[]) value));
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link byte[]}{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "MKIdentifier")
    @XmlJavaTypeAdapter(HexBinaryAdapter.class)
    public JAXBElement<byte[]> createMKIdentifier(byte[] value) {
        return new JAXBElement<byte[]>(_MKIdentifier_QNAME, byte[].class, null, ((byte[]) value));
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "CryptoEngineVersion")
    public JAXBElement<String> createCryptoEngineVersion(String value) {
        return new JAXBElement<String>(_CryptoEngineVersion_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "Component")
    public JAXBElement<String> createComponent(String value) {
        return new JAXBElement<String>(_Component_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "SMType")
    public JAXBElement<String> createSMType(String value) {
        return new JAXBElement<String>(_SMType_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Integer }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "KeySize")
    public JAXBElement<Integer> createKeySize(Integer value) {
        return new JAXBElement<Integer>(_KeySize_QNAME, Integer.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link byte[]}{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "SCIKeyValue")
    @XmlJavaTypeAdapter(HexBinaryAdapter.class)
    public JAXBElement<byte[]> createSCIKeyValue(byte[] value) {
        return new JAXBElement<byte[]>(_SCIKeyValue_QNAME, byte[].class, null, ((byte[]) value));
    }

}
